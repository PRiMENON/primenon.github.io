{"version":3,"file":"component---src-templates-tags-js-4f7cd449c8dd5ee1d4b0.js","mappings":"qNAkFA,UA1Ea,IAAsC,IAAD,MAApC,KAAEA,EAAI,YAAEC,EAAW,SAAEC,GAAU,EAC3C,MAAMC,GAAkC,QAAtB,EAAAH,EAAKI,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,SACzC,WAAEC,GAAeP,EAAKQ,kBACtBC,EAAgDT,EAAKQ,kBAAkBE,MAAMC,QAAQC,IAAWA,EAAMC,YAAYC,SAClH,IAAEC,GAAQd,EAEhB,GAAqB,IAAjBQ,EAAMO,OACR,OACE,gBAAC,IAAM,CAACd,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAK,QAAUS,EAAG,YACvB,gDAKN,MAAME,EAAS,QAAWF,EAAG,MAAMR,EAAU,MAC7C,OACE,gBAAC,IAAM,CAACL,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAOW,IACZ,0BAAKA,GACL,sBAAIC,UAAU,YAAYC,MAAO,CAAEC,UAAU,SAC1CX,EAAMY,KAAIC,IACT,MAAMhB,EAAQgB,EAAKT,YAAYP,OAASgB,EAAKC,OAAOC,KAC9CC,EAAOH,EAAKT,YAAYY,KAE9B,OACE,sBAAIC,IAAKJ,EAAKC,OAAOC,MACnB,2BACEN,UAAU,iBACVS,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAE,IAAMC,IAAOT,EAAKT,YAAYmB,MAAMC,OAAO,kBAAqBC,SAAS,OAC/E,wBAAMA,SAAS,YAAY5B,KAG/B,6BACGyB,IAAOT,EAAKT,YAAYmB,MAAMC,OAAO,sBAIxC,uBAAKf,UAAU,cACb,sBAAIA,UAAU,aACbO,GAAQA,EAAKT,OAAS,GAAKS,EAAKJ,KAAI,CAACN,EAAKoB,IAEvC,sBAAIT,IAAKS,GACP,gBAAC,EAAAN,KAAI,CAACC,GAAE,SAAWM,IAAUrB,GAAI,IAAKmB,SAAS,MAAMR,IAAKS,GACvDpB,SAQb,+BACE,qBACEsB,wBAAyB,CACvBC,OAAQhB,EAAKT,YAAY0B,aAAejB,EAAKkB,SAE/CN,SAAS,kBAIZ,KAIJ,C","sources":["webpack://primenon.github.io/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport moment from \"moment\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst Tags = ({ data, pageContext, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { totalCount } = data.allMarkdownRemark\r\n  const posts = process.env.NODE_ENV === 'production' ? data.allMarkdownRemark.nodes.filter((value) => !value.frontmatter.draft) : data.allMarkdownRemark.nodes\r\n  const { tag } = pageContext\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title={`タグ: \"${tag}\" (0記事)`} />\r\n        <p>該当するタグの投稿記事がありません。</p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  const tagHeader = `タグ: \"${tag}\" (${totalCount}記事)`\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title={tagHeader} />\r\n      <h1>{tagHeader}</h1>\r\n      <ol className=\"tag__list\" style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n          const tags = post.frontmatter.tags\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={`/${moment(post.frontmatter.date).format(`YYYYMMDDHHmmss`)}`} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>\r\n                    {moment(post.frontmatter.date).format(\r\n                      `YYYY年MM月DD日 HH:mm`\r\n                    )}\r\n                  </small>\r\n                  <div className=\"tags-index\">\r\n                    <ul className=\"tags-list\">\r\n                    {tags && tags.length > 0 && tags.map((tag, index) => {\r\n                      return (\r\n                        <li key={index}>\r\n                          <Link to={`/tags/${kebabCase(tag)}/`} itemProp=\"url\" key={index}>\r\n                            {tag}\r\n                          </Link>\r\n                        </li>\r\n                      )\r\n                    })}\r\n                    </ul>\r\n                  </div>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n          description\r\n          tags\r\n          draft\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["data","pageContext","location","siteTitle","site","siteMetadata","title","totalCount","allMarkdownRemark","posts","nodes","filter","value","frontmatter","draft","tag","length","tagHeader","className","style","listStyle","map","post","fields","slug","tags","key","itemScope","itemType","Link","to","moment","date","format","itemProp","index","kebabCase","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}